name: GitHub Pages

on:
  pull_request:
    branches: [main, dev]

env:
  CONFIG_DIR: ./scripts/configs
  SRC_REQUIREMENTS: ./scripts/configs/requirements.txt
  DOC_REQUIREMENTS: ./docs/doc_requirements.txt
  FINAL_DOC_REQUIREMENTS: ./docs/final_doc_requirements.txt
  PYTHON_VERSION: "3.11"
  SPHINX_VERSION: "7.4.7"

jobs:
  validate-branch:
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      proceed: ${{ steps.branch-check.outputs.proceed }}
    steps:
      - name: Check PR Source Branch
        id: branch-check
        run: |
          FROM_BRANCH="${{ github.head_ref }}"
          if [[ "$FROM_BRANCH" != "dev" && "$FROM_BRANCH" != "release" && ! "$FROM_BRANCH" =~ "test-workflow" ]]; then
            echo "This workflow only runs for PRs from branches named 'dev', 'release', or containing 'test-workflow'. Exiting gracefully."
            echo "proceed=false" >> $GITHUB_OUTPUT
            echo "proceed=false" >> $GITHUB_ENV
            exit 0
          fi
          echo "proceed=true" >> $GITHUB_OUTPUT
          echo "proceed=true" >> $GITHUB_ENV

  set-runner:
    needs: validate-branch
    if: needs.validate-branch.outputs.proceed == 'true'
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.set-matrix.outputs.runner }}
    steps:
      - name: Determine Runner
        id: set-matrix
        run: |
          BRANCH="${{ github.head_ref }}"
          if [[ "$BRANCH" =~ test-workflow ]]; then
          echo "runner=self-hosted" >> $GITHUB_ENV
          echo "runner=self-hosted" >> $GITHUB_OUTPUT
          else
          echo "runner=ubuntu-latest" >> $GITHUB_ENV
          echo "runner=ubuntu-latest" >> $GITHUB_OUTPUT
          fi
          echo "Using runner: $GITHUB_ENV"

  build:
    needs: set-runner
    continue-on-error: true
    runs-on: ${{ needs.set-runner.outputs.runner }}

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create temporary requirements file
        run: |
          touch ${{ env.FINAL_DOC_REQUIREMENTS }}
          [ -f ${{ env.DOC_REQUIREMENTS }} ] && cat ${{ env.DOC_REQUIREMENTS }} >> ${{ env.FINAL_DOC_REQUIREMENTS }} && echo "" >> ${{ env.FINAL_DOC_REQUIREMENTS }}
          [ -f ${{ env.SRC_REQUIREMENTS }} ] && cat ${{ env.SRC_REQUIREMENTS }} >> ${{ env.FINAL_DOC_REQUIREMENTS }} && echo "" >> ${{ env.FINAL_DOC_REQUIREMENTS }}

      - id: build
        uses: sphinx-notes/pages@v3
        with:
          requirements_path: "${{ env.FINAL_DOC_REQUIREMENTS }}"
          python_version: ${{ env.PYTHON_VERSION }}
          sphinx_version: ${{ env.SPHINX_VERSION }}
          checkout: false

  deploy:
    continue-on-error: true
    needs: [set-runner, build]

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ${{ needs.set-runner.outputs.runner }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
